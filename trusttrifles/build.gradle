apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'

    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.trusttechnologies.trust-device-info'
version='1.1.8'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 7
        versionName "1.1.8"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}


ext {
    bintrayRepo = 'trust'
    bintrayName = 'trustidentify'

    publishedGroupId = 'lat.trust.trustdemo'
    libraryName = 'trusttrifles'
    artifact = 'trusttrifles'

    libraryDescription = 'Android mobile library responsible for generating a unique id per device through certain features of this same.'

    siteUrl = 'https://github.com/trusttechnologies/lat_trust_mobile_android_trust-identify_library'
    gitUrl = 'https://github.com/trusttechnologies/lat_trust_mobile_android_trust-identify_library.git'

    libraryVersion = '1.0.23'

    developerId = 'fcaro'
    developerName = 'Felipe Caro'
    developerEmail = 'fcaro@trust.lat'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "com.android.support:design:28.0.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // -- HAWK
    api "com.orhanobut:hawk:2.0.1"

    //---------NETWORKING------------------------

    // -- OKHTTP
    api "com.squareup.okhttp3:logging-interceptor:3.10.0"
    api "com.squareup.okhttp3:okhttp:3.10.0"
    api "com.squareup.okhttp3:okhttp-urlconnection:3.10.0"

    // -- RETROFIT
    api "com.squareup.retrofit2:retrofit:2.4.0"
    api "com.squareup.retrofit2:converter-gson:2.4.0"

    // -- DEXTER
    implementation 'com.karumi:dexter:5.0.0'

    // -- ROOTBEER
    implementation 'com.scottyab:rootbeer-lib:0.0.7'

    //-------SDK Google Services-----------
    //implementation 'com.google.android.gms:play-services:12.0.1'

}

com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true










//apply from: 'LINK_TO_SCRIPT'
group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}